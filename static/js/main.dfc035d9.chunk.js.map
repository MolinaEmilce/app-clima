{"version":3,"sources":["components/Buscador/Buscador.jsx","components/Errors/MensajeError.jsx","components/Tiempo/Tiempo.jsx","components/Loading/Loading.jsx","components/Footer/Footer.jsx","pages/HomePage.jsx","App.js","index.js"],"names":["Buscador","handleSearch","useState","form","setForm","onSubmit","e","preventDefault","className","type","name","id","placeholder","value","onChange","target","MensajeError","msg","Tiempo","respuestaClima","console","log","message","humedad","min","max","img","wind","temp","weather","src","alt","Loading","Footer","viewBox","preserveAspectRatio","d","href","rel","HomePage","search","setSearch","loading","setLoading","setRespuestaClima","useEffect","a","urlApi","fetch","then","res","json","data","undefined","main","clima","humidity","Math","round","temp_min","temp_max","icon","speed","description","clouds","all","getSearchApi","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc035d9.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport './Buscador.css';\r\nconst Buscador = ({handleSearch}) =>{\r\n\r\n    const [form,setForm] = useState('');\r\n\r\n    const handleInput = (e)=>{\r\n      setForm(//Seteamos el objeto vacio, es decir en cada propiedad del obejto guardaremos los valores de los inputs, el nombre del elmento se le va asignar el valor ingresado, esa e sla forma de armar el objeto vacio.\r\n     e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault(); \r\n        handleSearch(form);\r\n        setForm('');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form_body\">\r\n                    <div className=\"btn_input\">\r\n                    <input \r\n                    type=\"text\" \r\n                    name=\"ciudad\" \r\n                    id=\"\" \r\n                    placeholder=\"Ciudad\" \r\n                    className=\"form-control\"\r\n                    value = {form}\r\n                    onChange={handleInput}\r\n                    />\r\n                    <i className=\"fas fa-search\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className =\"w-100 mt-2 btn_form\">\r\n                    Buscar \r\n                </button>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Buscador;","import './MensajeError.css'\r\nconst MensajeError = ({msg}) => {\r\n    return ( \r\n        <>\r\n        <div className=\" col-10 col-sm-6 col-md-6 col-lg-4 col-xl-3 msg_error\">\r\n            <h3>{msg}</h3>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default MensajeError;","import './Tiempo.css'\r\nimport MensajeError from '../Errors/MensajeError'\r\nconst Tiempo = ({respuestaClima}) => { \r\n\r\n        if(!respuestaClima){\r\n            return null;\r\n        }\r\n       \r\n        console.log(respuestaClima.message)\r\n        const {humedad,min,max,img,wind,temp,name,weather} = respuestaClima;\r\n   \r\n    return(\r\n        <>\r\n        {respuestaClima.message ? (\r\n            <MensajeError msg = {respuestaClima.message}/> \r\n        ):(\r\n            <div className=\"col-10 col-sm-6 col-md-6 col-lg-4 col-xl-3 mx-auto text-center justify-content-center rta_clima pt-4 pb-4\">\r\n                <h1>{name}</h1>\r\n                <span className=\"\">\r\n                <img src={`http://openweathermap.org/img/wn/${img}@2x.png`} alt=\"weather\"/>\r\n                </span>\r\n                <h1 className=\"py2\">{temp} &#176;C</h1>\r\n                <div className=\"clima_maxmin\">\r\n                    <h3 className=\"px-4\">\r\n                        <span>Min</span> <span>{min} &#176;C</span>\r\n                    </h3>\r\n                    <h3 className=\"px-4\">\r\n                        <span>Max</span> <span>{max} &#176;C</span>\r\n                    </h3>\r\n                </div>\r\n                <h2 className=\"clima_viento\">{weather}</h2>\r\n                <h2>Viento: {wind}km/h</h2>\r\n                <h2 className=\"\"> Humedad: {humedad}%</h2>\r\n            </div>\r\n        )}\r\n       \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Tiempo;","import './Loading.css';\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n        <div className=\"contain col-12\">\r\n        <div className=\"loadingio-spinner-bars-nm5uxiyfe8m\"><div className=\"ldio-bvnqwyv6add\">\r\n        <div></div><div></div><div></div><div></div>\r\n        </div></div>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n \r\nexport default Loading;","import './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer className=\"\">\r\n            <div className=\"wave2\"  >\r\n                <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" ><path d=\"M-0.27,103.13 C149.99,150.00 322.51,26.14 524.54,123.84 L500.00,150.00 L0.00,150.00 Z\" ></path></svg>\r\n                <section className=\"footer\">\r\n                    <div className=\"redes\">\r\n                        <a href=\"https://www.linkedin.com/in/emilcemolina/\"target=\"_blank\"rel=\"noreferrer\" ><i className=\"fab fa-linkedin\"></i></a>\r\n                        <a href=\"https://github.com/molinaemilce\"target=\"_blank\" rel =\"noreferrer\"><i className=\"fab fa-github\"></i></a>\r\n                        <a href=\"mailto:molinaemilce.dev@gmail.com\" rel=\"noreferrer\"><i className=\"fas fa-envelope-open-text\"></i></a>\r\n                    </div>\r\n                    <div className=\"datos\">\r\n                        <p>Emilce Daiana Molina Â© Copyrigths 2021</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            \r\n        </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React, {useState,useEffect} from \"react\";\r\nimport '../App.css';\r\n//Importamos los componentes\r\nimport Buscador from '../components/Buscador/Buscador';\r\nimport Tiempo from '../components/Tiempo/Tiempo';\r\n\r\nimport Loading from \"../components/Loading/Loading\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n//Importacionde la Api\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n    const [search,setSearch] = useState(null); //Se obtiene lo que se va a buscar\r\n    const [loading,setLoading] = useState(false);\r\n    const [respuestaClima,setRespuestaClima] = useState(null);  //Se obtiene respuesta de la Api\r\n\r\n\r\n    useEffect(()=>{\r\n      if(search === null){\r\n       return;\r\n      }\r\n\r\n\r\n      const getSearchApi = async () =>{\r\n        const apiKey = '0c310b8f047f6b24a53223a1e9f742f8';\r\n        const urlApi = await `https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=${apiKey}&units=metric`;\r\n        \r\n        setLoading(true);\r\n\r\n        await fetch(urlApi)\r\n        .then(res=> res.json())\r\n        .then(data =>{\r\n          if (data.main !== undefined){\r\n            let clima = {\r\n              humedad: data.main.humidity,\r\n              min: Math.round(data.main.temp_min),\r\n              max: Math.round(data.main.temp_max),\r\n              img: data.weather[0].icon,\r\n              id: data.id,\r\n              wind: data.wind.speed,\r\n              temp: Math.round(data.main.temp),\r\n              name: data.name,\r\n              weather: data.weather[0].description,\r\n              clouds: data.clouds.all,\r\n            }\r\n           \r\n            setRespuestaClima(clima)\r\n            setLoading(false);//Una vez obtenido la respuesta de la Api, sacamos el loading. \r\n          }else{\r\n            setLoading(false);\r\n            setRespuestaClima(data); //Se mandara el mje de error\r\n        \r\n          }\r\n        })\r\n      }\r\n    getSearchApi();\r\n\r\n    },[search])\r\n   \r\n     //Funcion que trae los datos del form\r\n    const handleSearch = (data)=>{\r\n      setSearch(data)\r\n    }\r\n    \r\n\r\n\r\n  return (\r\n  <>\r\n  <div className=\"body_app\">\r\n    <div className=\"container\">\r\n      <div className=\" text-center col-12 my-4\">\r\n        <h1>Buscador de Climas</h1>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-9 col-sm-6 cl-md-7 col-lg-4 mx-auto mb-4\">\r\n          <Buscador handleSearch = {handleSearch} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"text-center body_rta\">\r\n          {loading  && <Loading/> }\r\n\r\n          { search && !loading && (<Tiempo respuestaClima = {respuestaClima} />)}\r\n    </div>\r\n\r\n    <Footer />\r\n  </div>\r\n  </>\r\n\r\n  )\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\n//Paginas\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/app-clima/\" component={HomePage}/>\n          <Route exact path=\"/\" component={HomePage}/>\n        </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}